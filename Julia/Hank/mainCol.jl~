include("HankJoaoCol.jl")
R0 = 1.01
HM,pol,Aggs = Hank(R0)

pol_ss,polm_ss,EA_ss,R_ss,dist_ss,distm_ss,cpol_ss = equilibrium(pol,HM,1.01)


#######################Aggregates at steady state
pB = (1.0-HM.params.ubar)/(1.0-HM.params.Î¸/R_ss)
Agg_ss = [HM.params.ubar;R_ss;R_ss-1.0;HM.params.Mbar;1.0;pB;pB;1.0;1.0]
xss = vcat(reshape(pol_ss,HM.ns*HM.na),dist_ss[2:end],Agg_ss)    

@assert maximum(F(xss,xss,xss,[0.0;0.0],HM,1)) < 1e-14

@time Am = ForwardDiff.jacobian(t -> F(xss,xss,t,[0.0;0.0],HM,3),xss)
Bm = ForwardDiff.jacobian(t -> F(xss,t,xss,[0.0;0.0],HM,2),xss)
Cm = ForwardDiff.jacobian(t -> F(t,xss,xss,[0.0;0.0],HM,1),xss)
Em = ForwardDiff.jacobian(t -> F(xss,xss,xss,t,HM,1),[0.0;0.0])
